// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShopingCart.DataAccess.Core;

#nullable disable

namespace ShopingCart.DataAccess.Migrations
{
    [DbContext(typeof(ShopingCartContext))]
    partial class ShopingCartContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ShopingCart.Domain.Models.ShopingCart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ShopingCart");
                });

            modelBuilder.Entity("ShopingCart.Domain.Models.ShopingDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("ShopingCartId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ShopingCartId");

                    b.ToTable("ShopingDetails", t =>
                        {
                            t.HasCheckConstraint("Count", "Count > 0 AND Count <= 10")
                                .HasName("CK_Product_Count");
                        });
                });

            modelBuilder.Entity("ShopingCart.Domain.Models.ShopingDetails", b =>
                {
                    b.HasOne("ShopingCart.Domain.Models.ShopingCart", "ShopingCart")
                        .WithMany("ShopingDetails")
                        .HasForeignKey("ShopingCartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShopingCart");
                });

            modelBuilder.Entity("ShopingCart.Domain.Models.ShopingCart", b =>
                {
                    b.Navigation("ShopingDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
